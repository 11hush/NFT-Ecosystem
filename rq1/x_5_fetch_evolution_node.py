

import os
import zipfile
import json
import sys

# 设置递归深度限制
sys.setrecursionlimit(5000)
nodes = {}

def recursive_get_node(data):
    if nodes.get(data['t']) is None:
        nodes[data['t']] = 1
    if data.get('c') is None:
        return
    for child in data['c']:
        recursive_get_node(child)
        

def read_json_from_zip(zips):
    for filename in zips:
        print(filename)
        zip_path = os.path.join('/data2/zuobinwang/nft-all-in-one-0114-data/graphs_all', filename)
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            for file_info in zip_ref.infolist():
                if file_info.filename.endswith('.json'):
                    with zip_ref.open(file_info) as file:
                        data = json.load(file)
                        f_nodes = data['f']
                        if nodes.get(f_nodes) is None:
                            nodes[f_nodes] = 1
                        recursive_get_node(data)

dates = {
    # '0to999999':['0to999999.zip'],
    # '1000000to1999999':['1000000to1999999.zip'],
    # '2000000to2999999':['2000000to2999999.zip'],
    # '3000000to3999999':['3000000to3999999.zip'],
    # '4000000to4999999':['4000000to4999999.zip'],
    # '5000000to5999999':['5000000to5999999.zip'],
    # '6000000to6999999':['6000000to6999999.zip'],
    # '7000000to7999999':['7000000to7999999.zip'],
    # '8000000to8999999':['8000000to8999999.zip'],
    # '9000000to9999999':['9000000to9999999.zip'],
    # '10000000to10999999':['10000000to10999999.zip'],
    # '11000000to11999999':['11000000to11999999.zip'],
    # '12000000to12999999':['12000000to12999999.zip'],
    # '13000000to13999999':['13000000to13249999.zip','13000000to13249999_1.zip','13000000to13249999_2.zip','13000000to13249999_3.zip','13250000to13499999.zip','13250000to13499999_1.zip','13250000to13499999_2.zip','13250000to13499999_3.zip','13500000to13749999.zip','13500000to13749999_1.zip','13500000to13749999_2.zip','13750000to13999999.zip','13750000to13999999_1.zip','13750000to13999999_2.zip','13750000to13999999_3.zip','13750000to13999999_4.zip'],
    # '14000000to14999999':['14000000to14249999.zip','14000000to14249999_1.zip','14000000to14249999_2.zip','14000000to14249999_3.zip','14000000to14249999_4.zip','14000000to14249999_5.zip','14250000to14499999.zip','14250000to14499999_1.zip','14250000to14499999_2.zip','14250000to14499999_3.zip','14250000to14499999_4.zip','14500000to14749999.zip','14500000to14749999_1.zip','14500000to14749999_5.zip','14750000to14999999.zip','14750000to14999999_1.zip','14750000to14999999_2.zip','14750000to14999999_3.zip','14750000to14999999_4.zip','14750000to14999999_5.zip','14750000to14999999_6.zip'],
    # '15000000to15999999':['15000000to15249999.zip','15000000to15249999_1.zip','15000000to15249999_2.zip','15000000to15249999_3.zip','15000000to15249999_4.zip','15000000to15249999_5.zip','15000000to15249999_6.zip','15000000to15249999_7.zip','15250000to15499999.zip','15250000to15499999_1.zip','15250000to15499999_2.zip','15250000to15499999_3.zip','15250000to15499999_4.zip','15250000to15499999_5.zip','15250000to15499999_6.zip','15500000to15749999.zip','15500000to15749999_1.zip','15500000to15749999_2.zip','15500000to15749999_3.zip','15500000to15749999_4.zip','15500000to15749999_5.zip','15500000to15749999_6.zip','15750000to15999999.zip','15750000to15999999_1.zip','15750000to15999999_2.zip','15750000to15999999_3.zip'],
    '16000000to16999999':['16000000to16249999.zip','16000000to16249999_1.zip','16000000to16249999_2.zip','16000000to16249999_3.zip','16250000to16499999.zip','16250000to16499999_1.zip','16250000to16499999_2.zip','16250000to16499999_3.zip','16250000to16499999_4.zip','16500000to16749999.zip','16500000to16749999_1.zip','16500000to16749999_2.zip','16500000to16749999_3.zip','16750000to16999999.zip','16750000to16999999_1.zip','16750000to16999999_2.zip','16750000to16999999_3.zip'],
    '17000000to17999999':['17000000to17249999.zip','17000000to17249999_1.zip','17250000to17499999.zip','17250000to17499999_1.zip','17500000to17749999.zip','17500000to17749999_1.zip','17750000to17999999.zip','17750000to17999999_1.zip'],
    '18000000to18999999':['18000000to18249999.zip','18000000to18249999_1.zip','18250000to18499999.zip','18250000to18499999_1.zip','18500000to18749999.zip','18750000to18999999.zip','18750000to18999999_1.zip'],
    '19000000to19999999':['19000000to19249999.zip','19000000to19249999_1.zip','19250000to19499999.zip','19500000to19749999.zip','19750000to19999999.zip','19750000to19999999_1.zip'],
}

for date in dates:
    nodes = {}
    print(date)
    read_json_from_zip(dates[date])
    print(len(nodes))  
    with open(f'nodes_{date}.json', 'w') as f:
        json.dump(nodes, f)
